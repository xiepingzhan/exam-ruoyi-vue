<template>
  <div class="app-container testpaper_list">
    <el-row>
      <el-col>
        <el-form inline ref="myForm" :rules="rules" :model="form" size="mini">
          <el-form-item label="考试名称" prop="examName">
            <el-input v-model="form.examName" placeholder="请输入考试名称" clearable></el-input>
          </el-form-item>
          <el-form-item label="试卷名称" prop="title">
            <el-input v-model="form.title" placeholder="请输入试卷名称" clearable></el-input>
          </el-form-item>
<!--          <el-form-item label="试卷类型" prop="type">-->
<!--            <el-select v-model="form.type" clearable filterable>-->
<!--              <el-option v-for="(opt, optIndex) in dict.type.test_type" :key="optIndex" :label="opt.label"-->
<!--                         :value="opt.value"/>-->
<!--            </el-select>-->
<!--          </el-form-item>-->
          <el-form-item>
            <el-button type="primary" icon="el-icon-search" @click="searchBtn">搜索</el-button>
            <el-button icon="el-icon-refresh" @click="refreshBtn">重置</el-button>
          </el-form-item>
        </el-form>
      </el-col>
      <el-col>
        <el-table :data="tableList" style="width: 100%">
          <el-table-column width="150" show-overflow-tooltip label="考试名称" prop="examName" />
          <el-table-column width="150" show-overflow-tooltip label="试卷名称" prop="title" v-if="false" />
          <el-table-column width="100" show-overflow-tooltip label="试卷类型" prop="papertype"/>
          <el-table-column show-overflow-tooltip label="卷面总分" prop="totalscore">
            <template slot-scope="{row}">
              {{ row.totalscore }}分
            </template>
          </el-table-column>
          <el-table-column show-overflow-tooltip label="及格分数">
            <template slot-scope="{row}">
              {{ row.passingscore }}分
            </template>
          </el-table-column>
          <el-table-column width="100" label="考试时长">
            <template slot-scope="{row}">
              {{ row.duration }}(分钟)
            </template>
          </el-table-column>

          <el-table-column  label="发布时间" width="200"  prop="etime">
          </el-table-column>
          <el-table-column width="150" label="截止日期" prop="examCutoffTime"></el-table-column>
          <el-table-column width="150" label="考评成绩">
            <template slot-scope="{row}">
              <template v-if="row.evaluationresults == 'A'">
                <el-tag type="warning" plain>考完直接出</el-tag>
              </template>
              <template v-else>
                <el-tag type="info" plain>人工判卷</el-tag>
              </template>
            </template>
          </el-table-column>
          <el-table-column width="120" show-overflow-tooltip label="重复考试">
            <template slot-scope="{row}">
              <template v-if="row.frepeat == 'true'">
                <el-tag type="success" plain>
                  {{ row.ftwice == 'true' ? '可补考一次' : '不限次数' }}
                </el-tag>
              </template>
              <template v-else>
                <el-tag type="danger" plain>仅一次</el-tag>
              </template>
            </template>
          </el-table-column>
          <el-table-column width="100" show-overflow-tooltip label="公布答案">
            <template slot-scope="{row:data}">
              <template v-if="data.publishanswer == 'true'">
                <el-tag type="success" plain>公布</el-tag>
              </template>
              <template v-else>
                <el-tag type="danger" plain>不公布</el-tag>
              </template>
            </template>
          </el-table-column>
          <el-table-column width="80" show-overflow-tooltip label="题序">
            <template slot-scope="{row:data}">
              <template v-if="data.fhorder == 'true'">
                <el-tag type="success" plain>一样</el-tag>
              </template>
              <template v-else>
                <el-tag type="danger" plain>随机</el-tag>
              </template>
            </template>
          </el-table-column>
          <el-table-column width="60" show-overflow-tooltip label="单题">
            <template slot-scope="{row:data}">
              <template v-if="data.isalone == 'true'">
                <el-tag type="success" plain>是</el-tag>
              </template>
              <template v-else>
                <el-tag type="danger" plain>否</el-tag>
              </template>
            </template>
          </el-table-column>
          <el-table-column width="120" show-overflow-tooltip label="试卷状态" v-if="false">
            <template slot-scope="{row:data}">
              <template v-if="ntime > data.fotime">
                <el-tag type="danger" plain>禁止考试</el-tag>
                <!-- <el-tag type="danger" plain>试卷过期</span> -->
              </template>
              <template v-if="ntime <= data.fotime">
                <el-tag type="primary" plain>正在考试</el-tag>
                <!-- <div class="spinner-grow spinner-grow-sm" style="padding-top:-2px;" role="status">
                    <span class="sr-only">..</span>
                </div> -->
              </template>
            </template>
          </el-table-column>
          <el-table-column width="100" align="center" fixed="right" label="操作">
            <template slot-scope="{row:data}">
              <el-button
                v-if="ntime<=Number(dateFormat('YYYYmmdd',new Date(data.examCutoffTime)))"
                size='mini'
                title="参加考试"
                @click="goExa(data.testpaperId, data.frepeat, data.ftwice, data.isalone)"
                type="primary">
                参加考试
              </el-button>
            </template>
          </el-table-column>
        </el-table>
        <pagination
          v-show="total > 0"
          :total="total"
          :page.sync="queryParams.pageNum"
          :limit.sync="queryParams.pageSize"
          @pagination="initList"/>

      </el-col>
    </el-row>
    <!-- 一道道答題 -->
    <singeleQuestion
      ref="singleQuestion"
      type="single"
      v-if="singleable"
      @changeData="changeData"
      @uploadList="initList"
      @closeDrawer="closeDrawer"
      :TESTPAPER_ID="FID"
      :EXID="TESTPAPER_ID"/>
    <!-- 答题全部展开 -->
    <not-single-question
      ref="notSingleQuestion"
      type="noSingle"
      v-if="notSingleable"
      @closeDrawer="closeDrawer"
      :TESTPAPER_ID="FID"
      :EXID="TESTPAPER_ID"
      @changeData="changeData"
      @uploadList="initList"/>
  </div>
</template>

<script>
import testpaper_list from '@/mixins/view-testpaper-list'
import serice from '@/utils/request'
import singeleQuestion from './singeleQuestion.vue'
import notSingleQuestion from './notSingleQuestion.vue'

export default {
  components: {
    notSingleQuestion,
    singeleQuestion
  },
  mixins: [testpaper_list],
  data() {
    return {
      STATE: "release",
      singleable: false,
      notSingleable: false,
      defaultUrl: '/testpaper/my',
      ZS: 0,

    }
  },
  methods: {
    //获取试卷列表数据
    initList() {
      let params = {
        ...this.queryParams,
        ...this.form,
        state:this.STATE,//考试状态
        'tm': new Date().getTime()
      }
      if (this.form.testpaperId) {
        params.title = this.testPaperList.find(item => item.testpaperId === this.form.testpaperId).title
      }
      if (this.form.groups_old) {
        params.groupstr = this.form.groups_old.join(',')
      }
      serice({
        method: 'post',
        url: '/examobj/myExam',
        data:params
      }).then(data => {
        let {code, total, msg, rows} = data;
        if (200 == code) {
          this.tableList = rows;
          this.total = total;
        } else {
          this.$message.error(msg)
        }
      })

    },
    //结束考试
    closeDrawer() {
      this.notSingleable = false;
      this.singleable = false;
      this.initList()
    },
    // 更新作答id
    changeData(EXID, examinationrecordId) {
      this.TESTPAPER_ID = examinationrecordId;
    },
    //获取本次考试的次数
    getCount(id) {
      serice({
        method: 'post',
        url: '/examinationrecord/getCount',
        data: {
          testpaperId: id,
          tm: new Date().getTime()
        }
      }).then(res => {
        console.log(res, "本次考试次数")
        let data = res;
        if (200 == data.code) {
          this.ZS = data.data;		//已经考试次数
        }
      })
    },
    //参加考试
    goExa(id, FREPEAT, FTWICE, ISALONE) {
      let text = "";
      if ('false' == FREPEAT) {
        text = "本次考试您只有一次机会，请认真作答!";
      }
      swal({
        title: "确定要参加考试吗?",
        text: text,
        icon: "warning",
        buttons: true,
        dangerMode: true,
      }).then((willDelete) => {
        if (willDelete) {
          serice({
            method: 'post',
            url: '/examinationrecord',
            data: {
              testpaperId: id,
              tm: new Date().getTime()
            }
          }).then(res => {
            let {code, msg, data} = res;
            if (code != 200) return this.$message.error(msg)
            // FID和TESTPAPER_ID獲取
            this.FID = id;

            this.TESTPAPER_ID = data.examinationrecordId
            if (ISALONE == 'true') {
              // 一道道回答
              this.singleable = true;
              this.$nextTick(() => {
                this.$refs.singleQuestion.visible = true;
              })

            } else {
              this.notSingleable = true;
              this.$nextTick(() => {
                this.$refs.notSingleQuestion.visible = true;
              })
            }
          })
        }

      });
    },
  }
}
</script>
